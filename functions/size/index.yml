  getSize:
    handler: functions/size/getSize.main
    memorySize: 128
    layers:
      - !Ref PythonRequirementsLambdaLayer
    events:
      - http:
          path: get/sizes
          method: get
      - http:
          path: get/size/{id}
          method: get

  createSize:
    handler: functions/size/createSize.main
    memorySize: 128
    layers:
      - !Ref PythonRequirementsLambdaLayer
    events:
      - http:
          path: create/size
          method: post
          authorizer:
            name: CognitoUserPoolAuthorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:${self:provider.region}:${env:AccountID}:userpool/${env:UserPoolID}

  updateSize:
    handler: functions/size/updateSize.main
    memorySize: 128
    layers:
      - !Ref PythonRequirementsLambdaLayer
    events:
      - http:
          path: update/size/{id}
          method: put
          authorizer:
            name: CognitoUserPoolAuthorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:${self:provider.region}:${env:AccountID}:userpool/${env:UserPoolID}

  deleteSize:
    handler: functions/size/deleteSize.main
    memorySize: 128
    layers:
      - !Ref PythonRequirementsLambdaLayer
    events:
      - http:
          path: delete/size/{id}
          method: delete
          authorizer:
            name: CognitoUserPoolAuthorizer
            type: COGNITO_USER_POOLS
            arn: arn:aws:cognito-idp:${self:provider.region}:${env:AccountID}:userpool/${env:UserPoolID}

  getSizes:
    handler: functions/color/getSize.main
    memorySize: 128
    layers:
      - !Ref PythonRequirementsLambdaLayer
    events:
      - http:
          path: get/sizes
          method: delete