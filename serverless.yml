service: product-service
useDotenv: true

custom:
  stage: ${opt:stage, 'dev'}
  service: ${self:service}
  project: "product-service"
  serverless-offline:
    host: 0.0.0.0
    port: 3000
    stage: ${self:custom.stage}
    region: ap-south-1
    lambdaPort: 3002
  pythonRequirements:
    slim: true
    strip: true
    layer:
      name: ${self:custom.service}-${self:custom.stage}
      description: Python requirements lambda layer
      compatibleRuntimes:
        - python3.10
    noDeploy:
      - pytest
      - boto3
      - botocore
    useStaticCache: true
    useDownloadCache: true
  prune:
    automatic: true
    number: 1
  deploymentBucket:
    name: ${self:custom.service}-deploy-${self:custom.stage}
    region: ap-south-1
    serverSideEncryption: AES256

provider:
  name: aws
  runtime: python3.10
  stage: ${self:custom.stage}
  region: ap-south-1
  environment:
    STAGE: ${self:provider.stage}
    COGNITO_USER_POOL_ID: ${env:UserPoolID}
    COGNITO_USER_POOL_CLIENT_ID: ${env:CognitoClientId}
  timeout: 30
  memorySize: 256
  logRetentionInDays: 3
  deploymentBucket: ${self:custom.deploymentBucket.name}

package:
  individually: false
  patterns:
    - '!node_modules/**'
    - '!venv/**'
    - '!.vscode/**'
    - '!.git/**'
    - '!tests/**'
    - '!*.md'
    - 'requirements.txt'
    - '!package*.json'
    - '.env'
    - 'functions/**/*.py'

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-python-requirements
  - serverless-prune-plugin

functions:
  - ${file(functions/product/index.yml)}
  - ${file(functions/category/index.yml)}
  - ${file(functions/size/index.yml)}
  - ${file(functions/users/index.yml)}
  - ${file(functions/type/index.yml)}
  - ${file(functions/color/index.yml)}
  - ${file(functions/s3/index.yml)}
  - ${file(functions/events/index.yml)}
