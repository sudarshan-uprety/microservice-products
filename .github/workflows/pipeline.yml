name: Deploy Serverless Application

on:
  push:
    branches:
      - dev
      - uat
      - prod

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Display available Python version
        run: python3.8 --version

      - name: Install pip for Python 3.8
        run: |
          sudo apt-get install -y python3.8-distutils
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          sudo python3.8 get-pip.py
          sudo ln -s /usr/bin/python3.8 /usr/local/bin/python

      - name: Install Python 3.10
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.10 python3-pip python3-setuptools jq
          python3.10 -m pip install --upgrade pip
          sudo ln -sf /usr/bin/python3.10 /usr/local/bin/python

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/serverless-python-requirements
          key: python-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            python-${{ runner.os }}-
            python-

      - name: Install Python Requirements
        run: |
          pip install -r requirements.txt

      - name: Install Serverless Framework
        run: |
          npm install -g serverless@latest

      - name: Install Serverless Plugins
        run: |
          serverless plugin install --name serverless-python-requirements
          serverless plugin install --name serverless-dotenv-plugin
          serverless plugin install --name serverless-prune-plugin
          serverless plugin install --name serverless-deployment-bucket

      - name: Create .env file from GitHub secret
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
            echo "${{ vars.PROD_ENV }}" > .env
          elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
            echo "${{ vars.UAT_ENV }}" > .env
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "${{ vars.DEV_ENV }}" > .env
          else
            echo "This branch does not have corresponding environment variables"
            exit 1
          fi

      - name: Run Serverless Doctor
        run: serverless doctor

      - name: Set AWS credentials and deploy
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
              export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
              export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
              serverless deploy --stage dev
            elif [ "${{ github.ref }}" == "refs/heads/uat" ]; then
              export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_UAT }}
              export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_UAT }}
              serverless deploy --stage uat
            elif [ "${{ github.ref }}" == "refs/heads/prod" ]; then
              export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
              export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
              serverless deploy --stage prod
            else
              echo "Skipping deployment for branch: ${{ github.ref }}"
            fi
          else
            echo "Skipping deployment for event: ${{ github.event_name }}"
          fi
