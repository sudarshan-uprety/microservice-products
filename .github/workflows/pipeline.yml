name: Deploy Serverless Application

on:
  push:
    branches:
      - dev
      - uat
      - prod

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19.x'

#      - name: Install Node.js dependencies
#        run: npm install

      - name: Install Python 3.8
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get install -y software-properties-common
          sudo apt-get update
          sudo apt-get install -y python3.8 python3-pip python3-setuptools jq
          pip3 install --upgrade pip
          pip3 --no-cache-dir install --upgrade awscli

      - name: Display available Python version
        run: python3.8 --version

      - name: Install pip for Python 3.10
        run: |
          sudo apt-get install -y python3.10-distutils
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          sudo python3.10 get-pip.py
          sudo ln -s /usr/bin/python3.10 /usr/local/bin/python

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/serverless-python-requirements
          key: python-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            python-${{ runner.os }}-
            python-

      - name: Install Python Requirements
        run: |
          pip install -r requirements.txt

      - name: Install Serverless Framework
        run: |
          npm install -g serverless@latest
          npm install -g serverless-python-requirements@latest

      - name: Install Serverless Plugins
        run: |
          plugins=("serverless-deployment-bucket" "serverless-iam-roles-per-function" "serverless-python-requirements")  # Add your plugin names
          for plugin in "${plugins[@]}"; do
            sls plugin install --name $plugin
          done

      - name: Run Serverless Doctor
        run: serverless doctor

      - name: Create .env file from GitHub secret
        run: echo "${{ secrets.DEV_ENV }}" > .env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ap-south-1

      - name: Deploy using Serverless Framework
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_KEY_DEV }}
        run: |
          serverless deploy --stage ${GITHUB_REF##*/} --verbose
